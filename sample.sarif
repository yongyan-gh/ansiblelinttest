{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.5.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "Ansible-lint",
          "version": "6.0.3.dev3",
          "informationUri": "https://github.com/ansible/ansible-lint",
          "rules": [
            {
              "id": "no-changed-when",
              "name": "no-changed-when",
              "shortDescription": {
                "text": "Commands should not change things if nothing needs doing."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "text": "\nTasks should tell Ansible when to return ``changed``, unless the task only reads\ninformation. To do this, set ``changed_when``, use the ``creates`` or\n``removes`` argument, or use ``when`` to run the task only if another check has\na particular result.\n\nFor example, this task registers the ``shell`` output and uses the return code\nto define when the task has changed.\n\n.. code:: yaml\n\n    - name: handle shell output with return code\n      ansible.builtin.shell: cat {{ my_file|quote }}\n      register: my_output\n      changed_when: my_output.rc != 0\n\nThe following example will trigger the rule since the task does not\nhandle the output of the ``command``.\n\n.. code:: yaml\n\n    - name: does not handle any output or return codes\n      ansible.builtin.command: cat {{ my_file|quote }}\n    "
              },
              "properties": {
                "tags": [
                  "command-shell",
                  "idempotency"
                ]
              }
            },
            {
              "id": "var-spacing",
              "name": "var-spacing",
              "shortDescription": {
                "text": "Variables should have spaces before and after: { var_name }."
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "text": "Variables should have spaces before and after: ``{{ var_name }}``"
              },
              "properties": {
                "tags": [
                  "formatting"
                ]
              }
            },
            {
              "id": "command-instead-of-module",
              "name": "command-instead-of-module",
              "shortDescription": {
                "text": "git used in place of git module"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "text": "Executing a command when there is an Ansible module is generally a bad idea"
              },
              "properties": {
                "tags": [
                  "command-shell",
                  "idiom"
                ]
              }
            },
            {
              "id": "package-latest",
              "name": "package-latest",
              "shortDescription": {
                "text": "Package installs should not use latest."
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "text": "Package installs should use ``state=present`` with or without a version"
              },
              "properties": {
                "tags": [
                  "idempotency"
                ]
              }
            },
            {
              "id": "unnamed-task",
              "name": "unnamed-task",
              "shortDescription": {
                "text": "All tasks should be named."
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "text": "All tasks should have a distinct name for readability and for ``--start-at-task`` to work"
              },
              "properties": {
                "tags": [
                  "idiom"
                ]
              }
            }
          ]
        }
      },
      "columnKind": "utf16CodeUnits",
      "results": [
        {
          "ruleId": "no-changed-when",
          "level": "error",
          "message": {
            "text": "Task/Handler: unset variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "examples/playbooks/example.yml"
                },
                "region": {
                  "startLine": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "var-spacing",
          "level": "warning",
          "message": {
            "text": "Task/Handler: unset variable"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "examples/playbooks/example.yml"
                },
                "region": {
                  "startLine": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "no-changed-when",
          "level": "error",
          "message": {
            "text": "Task/Handler: trailing whitespace"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "examples/playbooks/example.yml"
                },
                "region": {
                  "startLine": 12
                }
              }
            }
          ]
        },
        {
          "ruleId": "command-instead-of-module",
          "level": "error",
          "message": {
            "text": "Task/Handler: executing git through command"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "examples/playbooks/example.yml"
                },
                "region": {
                  "startLine": 24
                }
              }
            }
          ]
        },
        {
          "ruleId": "no-changed-when",
          "level": "error",
          "message": {
            "text": "Task/Handler: executing git through command"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "examples/playbooks/example.yml"
                },
                "region": {
                  "startLine": 24
                }
              }
            }
          ]
        },
        {
          "ruleId": "command-instead-of-module",
          "level": "error",
          "message": {
            "text": "Task/Handler: executing git through command"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "examples/playbooks/example.yml"
                },
                "region": {
                  "startLine": 27
                }
              }
            }
          ]
        },
        {
          "ruleId": "var-spacing",
          "level": "warning",
          "message": {
            "text": "Task/Handler: passing git as an argument to another task"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "examples/playbooks/example.yml"
                },
                "region": {
                  "startLine": 33
                }
              }
            }
          ]
        },
        {
          "ruleId": "package-latest",
          "level": "note",
          "message": {
            "text": "Task/Handler: yum latest"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "examples/playbooks/example.yml"
                },
                "region": {
                  "startLine": 39
                }
              }
            }
          ]
        },
        {
          "ruleId": "unnamed-task",
          "level": "error",
          "message": {
            "text": "Task/Handler: debug msg=debug task without a name"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "examples/playbooks/example.yml"
                },
                "region": {
                  "startLine": 42
                }
              }
            }
          ]
        },
        {
          "ruleId": "package-latest",
          "level": "note",
          "message": {
            "text": "Task/Handler: apt latest"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "examples/playbooks/example.yml"
                },
                "region": {
                  "startLine": 44
                }
              }
            }
          ]
        },
        {
          "ruleId": "unnamed-task",
          "level": "error",
          "message": {
            "text": "Task/Handler: meta  flush_handlers"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "examples/playbooks/example.yml"
                },
                "region": {
                  "startLine": 47
                }
              }
            }
          ]
        }
      ]
    }
  ]
}
